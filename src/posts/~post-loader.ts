/**
 * this file is auto-generated by add-post script
 * DO NOT EDIT THIS FILE!!
 */
const posts: any = [
{ id: 17, title: '写给 React 开发的 Vue 上手指南', fetch: ()=> import('./[0017]写给 React 开发的 Vue 上手指南.md?raw') },
  { id: 16, title: '写给 Vue 开发的 React 上手指南', fetch: ()=> import('./[0016]写给 Vue 开发的 React 上手指南.md?raw') },
  { id: 15, title: '戏说 JavaScript 中的鸭子类型', fetch: ()=> import('./[0015]戏说 JavaScript 中的鸭子类型.md?raw') },
  { id: 14, title: '使用 propmts 创建你自己的交互式命令行表单', fetch: ()=> import('./[0014]使用 propmts 创建你自己的交互式命令行表单.md?raw') },
  { id: 13, title: '【译】开发-Vue3-的过程', fetch: ()=> import('./[0013]【译】开发-Vue3-的过程.md?raw') },
  { id: 12, title: '【Vue3.0】还学得动吗？赶紧和我过一遍用法吧！', fetch: ()=> import('./[0012]【Vue3.0】还学得动吗？赶紧和我过一遍用法吧！.md?raw') },
  { id: 11, title: '【Vue.js】-那些相似的-API，我该用哪个？-Vue-API-用法大比拼', fetch: ()=> import('./[0011]【Vue.js】-那些相似的-API，我该用哪个？-Vue-API-用法大比拼.md?raw') },
  { id: 10, title: '【React】还在为文字高光发愁吗？让我们手写一个吧！', fetch: ()=> import('./[0010]【React】还在为文字高光发愁吗？让我们手写一个吧！.md?raw') },
  { id: 9, title: '【React】如何使用-React-Hooks实现一个返回顶部的按钮', fetch: ()=> import('./[0009]【React】如何使用-React-Hooks实现一个返回顶部的按钮.md?raw') },
  { id: 8, title: '【Vue.js】如何灵活地使用超甜语法糖：v-model', fetch: ()=> import('./[0008]【Vue.js】如何灵活地使用超甜语法糖：v-model.md?raw') },
  { id: 6, title: '【JavaScript】请不要把Object和JSON混为一谈', fetch: ()=> import('./[0006]【JavaScript】请不要把Object和JSON混为一谈.md?raw') },
  { id: 5, title: '【JavaScript】敢问this到底指向何方', fetch: ()=> import('./[0005]【JavaScript】敢问this到底指向何方.md?raw') },
  { id: 4, title: '【水文章】一、如何通过babel配置使用可选链和双问号表达式', fetch: ()=> import('./[0004]【水文章】一、如何通过babel配置使用可选链和双问号表达式.md?raw') },
  { id: 3, title: '不理解 Typescript 泛型？看完就理解了', fetch: ()=> import('./[0003]不理解 Typescript 泛型？看完就理解了.md?raw') },
  { id: 2, title: '【React】一段代码告诉你，为什么JSX绑定回调，需要调用bind', fetch: ()=> import('./[0002]【React】一段代码告诉你，为什么JSX绑定回调，需要调用bind.md?raw') },
  { id: 1, title: '10分钟手写一个Promise', fetch: ()=> import('./[0001]10分钟手写一个Promise.md?raw') }
/*HERE APPENDS THE POSTS*/
];

export default function getPosts(page = 1, count = 10) {
  const start = (page - 1) * count;
  const end = start + count;
  return posts.slice(start, end)
};

export function getPostById (postId: number) {
  return posts.find(({ id }) => id === postId)
}
